version: "3.8"

services:
  db:
    hostname: db
    image: postgres:latest
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
      POSTGRES_DB: ${DATABASE}
    ports:
      - "5432:5432"
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=4096
    healthcheck:
      #CHANGE 1: this command checks if the database is ready, right on the source db server
      test: ["CMD-SHELL", "pg_isready -d $${DATABASE} -U $${USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - my-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env
    restart: always

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - .:/server
      - /server/node_modules
    restart: always
    depends_on:
      db:
        condition: service_healthy
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
volumes:
  db-data: {}
